services:
  chroma:
    image: chromadb/chroma:0.5.3
    privileged: true
    container_name: clothesdesigner_chroma
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma
    networks:
      - clothesdesigner_network
    dns:
      - 114.114.114.114
      - 8.8.8.8
      - 8.8.4.4
    healthcheck:
      test: ["CMD", "curl", "http://0.0.0.0:8000"]
      interval: 10s
      timeout: 5s
      retries: 10

  mysql:
    image: mysql:8.0
    privileged: true
    container_name: clothesdesigner_mysql
    environment:
      LANG: 'C.UTF-8'  # 设置环境变量
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: clothesdesigner_db
      MYSQL_USER: clothesdesigner_user
      MYSQL_PASSWORD: clothesdesigner_password
    ports:
      - "13306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - clothesdesigner_network
    dns:
      - 114.114.114.114
      - 8.8.8.8
      - 8.8.4.4
    depends_on:
      chroma:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  db_init:
    image: clothesdesignerbi/clothesdesigner:${clothesdesigner_VERSION:-latest}
    privileged: true
    container_name: clothesdesigner_db_init
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - clothesdesigner_network
    command: >
      sh -c "
      sleep 15 &&
      if ! mysql -h clothesdesigner_mysql -uclothesdesigner_user -pclothesdesigner_password -e 'use clothesdesigner_db; show tables;' | grep -q 's2_database'; then
        mysql -h clothesdesigner_mysql -uclothesdesigner_user -pclothesdesigner_password clothesdesigner_db < /usr/src/app/clothesdesigner-standalone-${clothesdesigner_VERSION:-latest}/conf/db/schema-mysql.sql &&
        mysql -h clothesdesigner_mysql -uclothesdesigner_user -pclothesdesigner_password clothesdesigner_db < /usr/src/app/clothesdesigner-standalone-${clothesdesigner_VERSION:-latest}/conf/db/data-mysql.sql
      else
        echo 'Database already initialized.'
      fi
      "
    dns:
      - 114.114.114.114
      - 8.8.8.8
      - 8.8.4.4

  clothesdesigner_standalone:
    image: clothesdesignerbi/clothesdesigner:${clothesdesigner_VERSION:-latest}
    privileged: true
    container_name: clothesdesigner_standalone
    environment:
      DB_HOST: clothesdesigner_mysql
      DB_NAME: clothesdesigner_db
      DB_USERNAME: clothesdesigner_user
      DB_PASSWORD: clothesdesigner_password
      CHROMA_HOST: clothesdesigner_chroma
    ports:
      - "9080:9080"
    depends_on:
      chroma:
        condition: service_healthy
      mysql:
        condition: service_healthy
      db_init:
        condition: service_completed_successfully
    networks:
      - clothesdesigner_network
    dns:
      - 114.114.114.114
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      #1.Named Volumes are best for persistent data managed by Docker.
      - clothesdesigner_data:/usr/src/app/clothesdesigner-standalone-${clothesdesigner_VERSION:-latest}
      #2.Bind Mounts are suitable for frequent modifications and debugging.
      #      - ./conf/application-prd.yaml:/usr/src/app/clothesdesigner-standalone-${clothesdesigner_VERSION:-latest}/conf/application-prd.yaml
      #3.Detailed Bind Mounts offer more control over the mount behavior.
      #      - type: bind
      #        source: ./clothesdesigner-standalone-${clothesdesigner_VERSION:-latest}/logs
      #        target: /usr/src/app/clothesdesigner-standalone-${clothesdesigner_VERSION:-latest}/logs
      #        bind:
      #          propagation: rprivate
      #          create_host_path: true
volumes:
  mysql_data:
  chroma_data:
  clothesdesigner_data:

networks:
  clothesdesigner_network: